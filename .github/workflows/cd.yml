name: 'Multi-Module Maven Build / Deploy'
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build-test:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'dockerfile-image-update-') == false
    steps:
      - name: checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: docker build
        run: make mvn-docker-build get-main-project-dirs
      - name: Upload main module
        uses: actions/upload-artifact@v1
        with:
          name: dockerfile-image-update
          path: dockerfile-image-update
      - name: Upload itest module
        uses: actions/upload-artifact@v1
        with:
          name: dockerfile-image-update-itest
          path: dockerfile-image-update-itest
  integration-test:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: Download itest dir
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-image-update-itest
      - name: integration test
        env:
          ITEST_GH_TOKEN: ${{ secrets.ITEST_GH_TOKEN }}
        run: make integration-test
  upload-coverage:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Download main project dir
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-image-update
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./dockerfile-image-update/target/site/jacoco/jacoco.xml
          # flags: unittests
          # yml: ./codecov.yml
          fail_ci_if_error: true
  master-deploy:
    needs: integration-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: Download main project dir
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-image-update
      - name: Download itest dir
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-image-update-itest
      - name: deploy
        env:
          ref: ${{ github.ref }}
        run: sh ./.ci.deploy.sh
